timezone: "Asia/Tokyo"

extention:
    python:
      enabled: false

ingress:
  enabled: false
  # Used to create an Ingress record.
  hosts:
    - chart-example.local!
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
common:
  configMap:
    REDASH_LOG_LEVEL: "INFO"
    # REDASH_GOOGLE_CLIENT_ID: ""
    # REDASH_GOOGLE_CLIENT_SECRET: ""
    # REDASH_GOOGLE_APPS_DOMAIN: ""
    REDASH_MAIL_SERVER: "localhost"
    REDASH_MAIL_PORT: "25"
    # REDASH_MAIL_USE_TLS: "False"
    # REDASH_MAIL_USE_SSL: "False"
    # REDASH_MAIL_USERNAME:
    # REDASH_MAIL_PASSWORD:
    # REDASH_MAIL_DEFAULT_SENDER:
    # REDASH_HOST:
    REDASH_CELERY_TIMEZONE: "Asia/Tokyo"
    TZ: "Asia/Tokyo"
    REDASH_ADDITIONAL_QUERY_RUNNERS: "redash.query_runner.python"

base:
  deployment:
    image:
      repository: redash/redash
      tag: latest
      pullPolicy: IfNotPresent

server:
  service:
    name: server
    type: LoadBalancer
    loadBalancerIP: ""
    externalPort: 8088
    internalPort: 5000
  configMap:
    redashWebWorkers: "4"
  replicas: 1
  annotations: {}
  nodeSelector: {}
  resource: {}

worker:
  configMap:
    queue: "queries,scheduled_queries,celery"
    workerCount: "2"
  replicas: 1
  annotations: {}
  nodeSelector: {}
  resource: {}

scheduler:
  replicas: 1
  annotations: {}
  nodeSelector: {}
  resource: {}

broker:
  enabled: true
  service:
    name: broker
    type: ClusterIP
    externalPort: 6379
    internalPort: 6379
  deployment:
    name: broker
    image:
      repository: redis
      tag: 3.0-alpine
      pullPolicy: IfNotPresent
    replicas: 1
    nodeSelector: {}
    resource: {}

db:
  # FIXME: postgreSQL動かない
  containerEnabled: false
  meta:
    name: "postgres"
    user: "postgres"
    pass: "postgres"
    host: "redash-postgresql"
    port: "5432"
  persistence:
    enabled: true
    mountPath: /var/lib/postgresql/data/pgdata
    subPath: "postgresql-db"
    size: 8Gi
    accessMode: ReadWriteOnce
    # annotations: {}
    # storageClass: "-"
    # existingClaim:
  service:
    name: database
    type: LoadBalancer
    externalPort: 5432
    internalPort: 5432
  deployment:
    name: database
    image:
      repository: postgres
      tag: 9.5.6-alpine
      pullPolicy: IfNotPresent
    replicas: 1
    nodeSelector: {}
    resource: {}

flower:
  enabled: false
  service:
    name: flower
    type: LoadBalancer
    externalPort: 80
    internalPort: 5555
  deployment:
    name: flower
    image:
      repository: crgwbr/docker-celery-flower
      tag: latest
      pullPolicy: IfNotPresent
    replicas: 1
    nodeSelector: {}
    resource: {}
  configMap:
    celeryBrokerUrl: redis://redash-broker-redis:6379/0
